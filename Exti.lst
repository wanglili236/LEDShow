C51 COMPILER V9.52.0.0   EXTI                                                              12/28/2016 19:02:23 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE EXTI
OBJECT MODULE PLACED IN Exti.obj
COMPILER INVOKED BY: d:\Keil_C51\C51\BIN\C51.EXE lib\Exti.c BROWSE INCDIR(.\lib) DEBUG OBJECTEXTEND PRINT(.\Exti.lst) TA
                    -BS(2) OBJECT(Exti.obj)

line level    source

   1          
   2          /*************  功能说明  **************
   3          
   4          本文件为STC15xxx系列的外中断初始化和中断程序,用户可以在这个文件中修改自己需要的中断程序.
   5          
   6          ******************************************/
   7          
   8          
   9          
  10          #include  "Exti.h"
  11          
  12          
  13          /********************* INT0中断函数 *************************/
  14          void Ext_INT0 (void) interrupt INT0_VECTOR    //进中断时已经清除标志
  15          {
  16   1        P00 = ~P00;
  17   1      }
  18          
  19          /********************* INT1中断函数 *************************/
  20          void Ext_INT1 (void) interrupt INT1_VECTOR    //进中断时已经清除标志
  21          {
  22   1        P01 = ~P01;
  23   1      }
  24          
  25          /********************* INT2中断函数 *************************/
  26          void Ext_INT2 (void) interrupt INT2_VECTOR  //
  27          {
  28   1        //P02 = ~P02;
  29   1        INT_CLKO &= ~(1 << 4);  //INT2 Disable  
  30   1      }
  31          
  32          /********************* INT3中断函数 *************************/
  33          void Ext_INT3 (void) interrupt INT3_VECTOR
  34          {
  35   1        P03 = ~P03;
  36   1      }
  37          
  38          /********************* INT4中断函数 *************************/
  39          void Ext_INT4 (void) interrupt INT4_VECTOR
  40          {
  41   1        P04 = ~P04;
  42   1      }
  43          
  44          //========================================================================
  45          // 函数: u8 Ext_Inilize(u8 EXT, EXTI_InitTypeDef *INTx)
  46          // 描述: 外部中断初始化程序.
  47          // 参数: INTx: 结构参数,请参考Exti.h里的定义.
  48          // 返回: 成功返回0, 空操作返回1,错误返回2.
  49          // 版本: V1.0, 2012-10-22
  50          //========================================================================
  51          u8  Ext_Inilize(u8 EXT, EXTI_InitTypeDef *INTx)
  52          {
  53   1        if(EXT >  EXT_INT4) return 1; //空操作
  54   1        
C51 COMPILER V9.52.0.0   EXTI                                                              12/28/2016 19:02:23 PAGE 2   

  55   1        if(EXT == EXT_INT0) //外中断0
  56   1        {
  57   2          if(INTx->EXTI_Interrupt == ENABLE)    EX0 = 1;  //允许中断
  58   2          else                  EX0 = 0;  //禁止中断
  59   2          if(INTx->EXTI_Polity == PolityHigh)   PX0 = 1;  //高优先级中断
  60   2          else                  PX0 = 0;  //低优先级中断
  61   2          if(INTx->EXTI_Mode == EXT_MODE_Fall)  IT0 = 1;  //下降沿中断
  62   2          else                  IT0 = 0;  //上升,下降沿中断
  63   2          return  0;    //成功
  64   2        }
  65   1      
  66   1        if(EXT == EXT_INT1) //外中断1
  67   1        {
  68   2          if(INTx->EXTI_Interrupt == ENABLE)    EX1 = 1;  //允许中断
  69   2          else                  EX1 = 0;  //禁止中断
  70   2          if(INTx->EXTI_Polity == PolityHigh)   PX1 = 1;  //高优先级中断
  71   2          else                  PX1 = 0;  //低优先级中断
  72   2          if(INTx->EXTI_Mode == EXT_MODE_Fall)  IT1 = 1;  //下降沿中断
  73   2          else                  IT1 = 0;  //上升,下降沿中断
  74   2          return  0;    //成功
  75   2        }
  76   1      
  77   1        if(EXT == EXT_INT2)   //外中断2, 固定为下降沿低优先级中断
  78   1        {
  79   2          if(INTx->EXTI_Interrupt == ENABLE)  INT_CLKO |=  (1 << 4);  //允许中断  
  80   2          else                INT_CLKO &= ~(1 << 4);  //禁止中断
  81   2          return  0;    //成功
  82   2        }
  83   1      
  84   1        if(EXT == EXT_INT3)   //外中断3, 固定为下降沿低优先级中断
  85   1        {
  86   2          if(INTx->EXTI_Interrupt == ENABLE)  INT_CLKO |=  (1 << 5);  //允许中断  
  87   2          else                INT_CLKO &= ~(1 << 5);  //禁止中断
  88   2          return  0;    //成功
  89   2        }
  90   1      
  91   1        if(EXT == EXT_INT4)   //外中断4, 固定为下降沿低优先级中断
  92   1        {
  93   2          if(INTx->EXTI_Interrupt == ENABLE)  INT_CLKO |=  (1 << 6);  //允许中断  
  94   2          else                INT_CLKO &= ~(1 << 6);  //禁止中断
  95   2          return  0;    //成功
  96   2        }
  97   1        return 2; //失败
  98   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    195    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
